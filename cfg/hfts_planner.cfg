#!/usr/bin/env python
PACKAGE = "hfts_grasp_planner"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add('num_hfts_iterations', int_t, 0, "Maximum number iterations per HFTS layer", 40, 1, 200)
gen.add('num_planning_attempts', int_t, 0, "Maximum number of grasp planning attempts", 10, 1, 300)
gen.add('com_center_weight', double_t, 0, "Weight for grasp quality measure for Robotiq hand.", 0.1, 0.0, 10.0)
gen.add('reachability_weight', double_t, 0, "Weight for reachability component in objective function", 1.0, 0.0, 1000.0)
gen.add('max_normal_variance', double_t, 0, "Maximal allowed variance of normal in the neighborhood of a contact point",
        0.2, 0.0, 100.0)
gen.add('min_contact_patch_radius', double_t, 0, "Size of the contact patch for which the normal variance is limitied",
        0.01, 0.0, 1.0)
gen.add('max_num_points', int_t, 0, "Maximal number of contact points for an object", 10000, 100, 100000)
gen.add('contact_density', double_t, 0, "Number of contact points per m^2", 300.0, 1.0, 1000.0)
gen.add('hfts_position_weight', double_t, 0, "Weight for positions in HFTS clustering", 1.0, 0.0, 100.0)
gen.add('hfts_branching_factor', int_t, 0, "HFTS branching factor", 4, 2, 100)
gen.add('hfts_first_level_branching_factor', int_t, 0, "HFTS branching factor on first level", 3, 2, 100)
gen.add('force_new_hfts', bool_t, 0, "Flag whether to force recomputing the hfts", False)
gen.add('hfts_filter_points', bool_t, 0, "Flag whether to filter points", True)

exit(gen.generate(PACKAGE, "hfts_planner_node", "HFTSPlanner"))
